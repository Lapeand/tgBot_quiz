module.exports = (bot, pool) =>{
  bot.onText(/\/top/, async (msg) =>{
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    try{
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
      const userCheck = await pool.query(`SELECT * FROM users WHERE id=$1`, [userId]);
      if (userCheck.rows.length === 0){
        return bot.sendMessage(chatId, '‚ùó–í–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è! –í–≤–µ–¥–∏—Ç–µ /start‚ùó')
      }

      // –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã
      //–ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø
      const topResult = await pool.query(`SELECT username, score FROM users ORDER BY score DESC LIMIT 5`)
      const usersTop = topResult.rows;

      //–ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–µ –∫–æ–ª-–≤–æ –æ—á–∫–æ–≤ –∏ –º–µ—Å—Ç–æ
      const userScore = userCheck.rows[0].score;
      const rankResult = await pool.query(`
        SELECT rank FROM (
          SELECT id, username, score,
                DENSE_RANK() OVER (ORDER BY score DESC) AS rank
          FROM users
        ) ranked
        WHERE id = $1
      `, [userId]);

      const userRank = rankResult.rows[0].rank;
        

      // —Å–ø–∏—Å–æ–∫ –º–µ–¥–∞–ª–µ–π
      const medals = ['ü•á', 'ü•à', 'ü•â', 'üèÖ', 'üéñÔ∏è']

      //–°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
      let text = 'üèÜ –¢–û–ü-5 –ü–û –û–ß–ö–ê–ú üèÜ\n\n'
      usersTop.forEach((user, index) => {
        text+= `${medals[index]} ${index+1}. ${user.username} - ${user.score} ‚≠ê\n`
      })
      text+= `\n–í–∞—à–∞ –ø–æ–∑–∏—Ü–∏—è #${userRank} - ${userScore}‚≠ê`
      
      bot.sendMessage(chatId, text);

      }catch (error){
        console.error('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ñ–∞–π–ª–µ top.js:', error);
        bot.sendMessage(chatId, '‚ùó–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–æ–º–∞–Ω–¥—ã /top.‚ùó')
      }

  })
}